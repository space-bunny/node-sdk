{"version":3,"sources":["spacebunny.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,MAAM;;;AAAC;;;;;;IAS/C,UAAU;AACd,WADI,UAAU,CACF,IAAI,EAAE;0BADd,UAAU;;AAEZ,QAAI,CAAC,iBAAiB,GAAG,qBAAM,EAAE,EAAE,IAAI,CAAC,CAAC;AACzC,QAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC3B,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;AACjD,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC7C,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;AACjD,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC7C,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;AACzC,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;AACzC,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAC3C,QAAI,CAAC,SAAS,GAAG,MAAM,CAAC;AACxB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,KAAK,CAAC;AAChD,QAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,IAAI,OAAO,CAAC;GACjE;;;;;;;;;AAAA;eAdG,UAAU;;iCAuBD;;AAEX,UAAM,GAAG,QAAM,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,AAAE,CAAC;AAC1F,UAAI,IAAI,CAAC,OAAO,EAAE;;AAEhB,YAAI;AACF,cAAM,IAAI,GAAG,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;AACtD,cAAM,QAAQ,GAAG,2BAAQ,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3C,cAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AACvD,cAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;AAC1D,cAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;SACpE,CAAC,OAAO,EAAE,EAAE;AACX,gBAAM,IAAI,4BAAiB,aAAa,CAAC,EAAE,CAAC,CAAC;SAC9C;OACF,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;;AAEpF,YAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,EAAE,CAAC;AACtC,YAAI,IAAI,CAAC,IAAI,EAAE;AACb,cAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;SAC7E,MAAM;AACL,cAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;SACzE;OACF,MAAM;;AACL,cAAM,IAAI,4BAAiB,8BAA8B,CAAC,gDAAgD,CAAC,CAAC;OAC7G;KACF;;;;;;;;+BAKU;AACT,UAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;AACxE,aAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE;AACtC,eAAO,GAAG,CAAC,IAAI,CAAC;OACjB,CAAC,CAAC;KACJ;;;;;;;;+BAKU;AACT,UAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;AACnE,aAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;wCAImB,OAAO,EAAE;AAC3B,UAAI,mBAAmB,GAAG,OAAO,CAAC;AAClC,UAAI;AACF,2BAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;OAC/C,CAAC,OAAO,EAAE,EAAE;AACX,2BAAmB,GAAG,OAAO,CAAC;OAC/B;AACD,aAAO,mBAAmB,CAAC;KAC5B;;;SA9EG,UAAU;;;kBAkFD,UAAU","file":"spacebunny.js","sourcesContent":["/**\n * A module that exports the base SpaceBunny client\n * @module SpaceBunny\n */\n\n// Import some helpers modules\nimport merge from 'merge';\nimport request from 'sync-request';\n\nconst CONFIG = require('../config/constants').CONFIG;\n\n// Import Space Bunny errors\nimport SpaceBunnyErrors from './spacebunny_errors';\n\n/**\n * @constructor\n * @param {Object} opts - constructor options may contain api-key or connection options\n */\nclass SpaceBunny {\n  constructor(opts) {\n    this._connectionParams = merge({}, opts);\n    this._endPointConfigs = {};\n    this._channels = this._connectionParams.channels;\n    this._apiKey = this._connectionParams.apiKey;\n    this._deviceId = this._connectionParams.deviceId;\n    this._secret = this._connectionParams.secret;\n    this._host = this._connectionParams.host;\n    this._port = this._connectionParams.port;\n    this._vhost = this._connectionParams.vhost;\n    this._protocol = 'amqp';\n    this._ssl = this._connectionParams.ssl || false;\n    this._inputTopic = this._connectionParams.inputTopic || 'inbox';\n  }\n\n  /**\n   * Check if api-key or connection parameters have already been passed\n   * If at least api-key is passed ask the endpoint for the configurations\n   * else if also connection parameters are not passed raise an exception\n   *\n   * @return an Object containing the connection parameters\n   */\n  connection() {\n    // Contact endpoint to retrieve configs\n    const uri = `${CONFIG.endpoint.url}${CONFIG.endpoint.api_version}${CONFIG.endpoint.path}`;\n    if (this._apiKey) {\n      // Get configs from endpoint\n      try {\n        const args = { headers: { 'Api-Key': this._apiKey } };\n        const response = request('GET', uri, args);\n        this._endPointConfigs = JSON.parse(response.getBody());\n        this._connectionParams = this._endPointConfigs.connection;\n        this._connectionParams.deviceId = this._connectionParams.device_id;\n      } catch (ex) {\n        throw new SpaceBunnyErrors.EndPointError(ex);\n      }\n    } else if (this._deviceId && this._secret && this._host && this._port && this._vhost) {\n      // Manually provided configs\n      this._connectionParams.protocols = {};\n      if (this._ssl) {\n        this._connectionParams.protocols[this._protocol] = { ssl_port: this._port };\n      } else {\n        this._connectionParams.protocols[this._protocol] = { port: this._port };\n      }\n    } else { // No configs or missing some info\n      throw new SpaceBunnyErrors.ApiKeyOrConfigurationsRequired('Missing Api Key or wrong connection parameters');\n    }\n  }\n\n  /**\n   * @return all channels configured for the current device\n   */\n  channels() {\n    this._channels = this._endPointConfigs.channels || this._channels || [];\n    return this._channels.map(function(obj) {\n      return obj.name;\n    });\n  }\n\n  /**\n   * @return the device ID for the current device\n   */\n  deviceId() {\n    this._deviceId = this._deviceId || this._connectionParams.deviceId;\n    return this._deviceId;\n  }\n\n  // ------------ PRIVATE METHODS -------------------\n\n  _encapsulateContent(content) {\n    let encapsulatedContent = content;\n    try {\n      encapsulatedContent = JSON.stringify(content);\n    } catch (ex) {\n      encapsulatedContent = content;\n    }\n    return encapsulatedContent;\n  }\n\n}\n\nexport default SpaceBunny;\n"],"sourceRoot":"/Users/gfoiani/Dev/work/spacebunny/sdk-node/src"}