{"version":3,"sources":["utils.js"],"names":["parseContent","encapsulateContent","message","parsedMessage","Buffer","isBuffer","toString","res","JSON","parse","ex","content","encapsulatedContent","stringify","utilsFunctions"],"mappings":";;;;;QAQgBA,Y,GAAAA,Y;QAsBAC,kB,GAAAA,kB;;AA7BhB;;;;;;;AAOO,SAASD,YAAT,CAAsBE,OAAtB,EAA+B;AACpC,MAAIC,gBAAgBD,OAApB;AACA,MAAIE,OAAOC,QAAP,CAAgBF,aAAhB,CAAJ,EAAoC;AAClCA,oBAAgBA,cAAcG,QAAd,CAAuB,OAAvB,CAAhB;AACD;AACD,MAAIC,YAAJ;AACA,MAAI;AACFA,UAAMC,KAAKC,KAAL,CAAWN,aAAX,CAAN;AACD,GAFD,CAEE,OAAOO,EAAP,EAAW;AACXH,UAAMJ,aAAN;AACD;AACD,SAAOI,GAAP;AACD;;AAED;;;;;;;;AAQO,SAASN,kBAAT,CAA4BU,OAA5B,EAAqC;AAC1C,MAAIC,sBAAsBD,OAA1B;AACA,MAAI;AACFC,0BAAsBJ,KAAKK,SAAL,CAAeF,OAAf,CAAtB;AACD,GAFD,CAEE,OAAOD,EAAP,EAAW;AACXE,0BAAsBD,OAAtB;AACD;AACD,SAAOC,mBAAP;AACD;;AAED,IAAME,iBAAiB,EAAEd,0BAAF,EAAgBC,sCAAhB,EAAvB;kBACea,c","file":"utils.js","sourcesContent":["\n/**\n * Automatically parse message content\n *\n * @private\n * @param {Object/String} message - the received message\n * @return an object containing the input message with parsed content\n */\nexport function parseContent(message) {\n  let parsedMessage = message;\n  if (Buffer.isBuffer(parsedMessage)) {\n    parsedMessage = parsedMessage.toString('utf-8');\n  }\n  let res;\n  try {\n    res = JSON.parse(parsedMessage);\n  } catch (ex) {\n    res = parsedMessage;\n  }\n  return res;\n}\n\n/**\n * Encapsulates contens for publishing messages.\n * If the content is a valid JSON the function stringifies the content\n *\n * @private\n * @param {Object} content - content to publish, could be a string or a JSON object\n * @return the content encapsulated in the proper way\n */\nexport function encapsulateContent(content) {\n  let encapsulatedContent = content;\n  try {\n    encapsulatedContent = JSON.stringify(content);\n  } catch (ex) {\n    encapsulatedContent = content;\n  }\n  return encapsulatedContent;\n}\n\nconst utilsFunctions = { parseContent, encapsulateContent };\nexport default utilsFunctions;\n"],"sourceRoot":"src"}